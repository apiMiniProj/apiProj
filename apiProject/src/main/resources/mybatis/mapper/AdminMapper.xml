<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.spring.api.mapper.AdminMapper">
	
	<!-- 어드민 API 커스텀쿼리등록 조회 -->
	<select id="getApiQuery" resultType="com.example.spring.api.model.ApiQuery" parameterType="java.util.Map">
		SELECT CUSTOM_ID
			 , QUERY_TEXT
			 , USER_AVAILABLE
			 , REG_DATE
			 , REG_EMP
			 , IP
		FROM API_QUERY
		WHERE CUSTOM_ID = #{customId}
	</select>
	
	<!-- 어드민 API 커스텀쿼리등록 저장 -->
	<update id="saveCustomQuery" parameterType="java.util.Map">
		MERGE INTO API_QUERY S
		USING (SELECT #{customId} AS CUSTOM_ID
					, #{queryText} AS QUERY_TEXT
					, #{userAvailable} AS USER_AVAILABLE
					, SYSDATE AS REG_DATE
					, #{userId} AS REG_EMP
					, #{userIp} AS IP
				FROM DUAL ) T
		ON (S.CUSTOM_ID = T.CUSTOM_ID)
		WHEN MATCHED THEN
		UPDATE SET 
			  S.QUERY_TEXT = T.QUERY_TEXT
			, S.USER_AVAILABLE = T.USER_AVAILABLE
			, S.REG_DATE = T.REG_DATE
			, S.REG_EMP = T.REG_EMP
			, S.IP = T.IP
		WHEN NOT MATCHED THEN
		INSERT (S.CUSTOM_ID
			  , S.QUERY_TEXT
			  , S.USER_AVAILABLE
			  , S.REG_DATE
			  , S.REG_EMP
			  , S.IP )
		VALUES (T.CUSTOM_ID
			  , T.QUERY_TEXT
			  , T.USER_AVAILABLE
			  , T.REG_DATE
			  , T.REG_EMP
			  , T.IP )
	</update>
</mapper>